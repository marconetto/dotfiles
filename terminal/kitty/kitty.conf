# vim:fileencoding=utf-8:ft=config:fdm=marker foldlevel=0

allow_remote_control yes


font_family      MonacoB Nerd Font
# font_familiy     Meslo LG S for Powerline
# bold_font        Meslo LG S for Powerline
bold_font        MonacoB Nerd Font
italic_font        MonacoB Nerd Font
bold_italic_font        MonacoB Nerd Font
# italic_font      Meslo LG S for Powerline
# bold_italic_font Meslo LG S for Powerline


#font_family      FiraCode Nerd Font Mono
#bold_font        auto
#italic_font      auto
#bold_italic_font auto

shell_integration disabled

font_size 12.0
background_opacity 1.00

macos_thicken_font 0.01
cursor_shape block
# cursor_blink_interval 0.4
cursor_blink_interval 0

shell /bin/zsh
listen_on            unix:/tmp/mykitty



# The color for highlighting URLs on mouse-over
# url_color #9ece6a

default_pointer_shape arrow

# Window borders
active_border_color #4E96E2
inactive_border_color #444444
bell_border_color #444444

enable_audio_bell no


window_border_width 1.0
window_padding_width 1.0

# hide_window_decorations titlebar-only
hide_window_decorations yes
confirm_os_window_close 0


#window_margin_width 3
#draw_minimal_borders 1

#box_drawing_scale 0.001, 1, 1.5, 2

# tab_title_template "{fmt.fg.red}red{fmt.fg.tab}normal{fmt.bg._00FF00}greenbg{fmt.bg.tab}"
#
#tab_title_template "{title[title.rfind('-')+2:]}"
#tab_title_template "{title.sub("*.-","")}"
#tab_title_template "{title[title.rfind('-')+2:]}"


#------------------------------------------------------------------------------
# TAB BAR
# tab_title_template " {title}{' +%s' % (num_windows - 1) if (layout_name == 'stack' and num_windows > 1) else ''} "
# tab_title_template "{fmt.fg._fca510}{'%s'% '▪' if (layout_name == 'stack') else ' ' }{fmt.fg.tab}{'%s' % (title[title.rfind('-')+2:].lower() if title.rfind('-') > 1 else title)} "


tab_title_template "{fmt.fg._b57614}{'%s'% '●' if (layout_name == 'stack') else ' ' }{fmt.fg.tab}{'%s' % (title)} "

#tab_title_template "{fmt.fg._b57614}{'%s'% '●' if (layout_name == 'stack') else ' ' }{fmt.fg.tab}{'%s' % (title[title.rfind('-')+2:].lower() if title.rfind('-') > 1 else title)} "

# tab_title_template " {'%s'% '[' if (layout_name == 'stack') else '' }{'%s' % (title[title.rfind('-')+2:].lower() if title.rfind('-') > 1 else title)}{'%s'% ']' if (layout_name == 'stack') else '' } "
tab_bar_min_tabs 1
tab_bar_style custom
tab_bar_edge top
tab_fade 1
tab_bar_margin_height 4.0 3.0
tab_bar_margin_width 25.0





#------------------------------------------------------------------------------
# WINDOW MOVEMENT
# enabled_layouts *
enabled_layouts splits:split_axis=horizontal,stack,tall,fat

map cmd+t     new_tab_with_cwd

# toggle zoom
map cmd+z toggle_layout stack
# map f2 toggle_layout tall
# map f3 toggle_layout fat
# map f4 toggle_layout split:split_axis=horizontal

map cmd+shift+right next_tab
map cmd+shift+left previous_tab

# move tab around
# map cmd+shift+right move_tab_forward
# map cmd+shift+left move_tab_backward

# splits
map cmd+d launch --cwd=current --location=vsplit
map cmd+shift+d launch --cwd=current --location=hsplit

# map f1 launch --stdin-source=@screen_scrollback less


# moves
map cmd+down neighboring_window down
map cmd+up neighboring_window up
map cmd+left neighboring_window left
map cmd+right neighboring_window right

# resizes
map cmd+alt+right resize_window narrower
map cmd+alt+left resize_window wider
map cmd+alt+up resize_window taller
map cmd+alt+down resize_window shorter

#swaps
map ctrl+shift+left move_window left
map ctrl+shift+right move_window right
map ctrl+shift+down move_window down
map ctrl+shift+up move_window up
# map ctrl+shift+up scroll_line_up

resize_draw_strategy static

map cmd+w close_window


# map f5 set_background_opacity -0.1
#



# alpha for inactive windows
# inactive_text_alpha 0.90

# background_opacity 0.999
#
# startup_session /tmp/session.kitty

#vim split navigation
map cmd+left kitten pass_keys.py neighboring_window left ctrl+h
map cmd+right kitten pass_keys.py neighboring_window right ctrl+p
#------------------------------------------------------------------------------


map cmd+equal     change_font_size all +0.2
map cmd+minus     change_font_size all -0.2


map cmd+k send_text terminal,application \x63\x6C\x65\x61\x72\x0A

# map cmd+shift+l combine : clear_terminal scroll active : send_text --match title:zsh \x0c
#map f1  send-text  aa
#map cmd+shift+l  launch --allow-remote-control  kitty +kitten send-text hi
# map f1 launch --allow-remote-control kitty +kitten broadcast
#

map Alt+s kitten kitty_grab/grab.py



# reload kitty.conf --- MACOS: ctrl+cmd+,
map ctrl+shift+l remote_control send-text --match 'title:zsh and state:parent_active' '\x03\x0c'
map ctrl+shift+p remote_control send-text --match 'title:zsh and state:parent_active' '\x03cd\x0d\x0c'
map ctrl+p send_text all '\x03cd\x0d\x0c'
map cmd+enter send_text normal,application \x1bxxx


# map cmd+enter no_op

# zsh: complete suggested command and execute it
# map cmd+enter send_text normal,application \x1bxxx
# zsh: complete suggested command
map cmd+shift+enter send_text normal,application \x1bxxy


# jump to beginning and end of word
map alt+left send_text all \x1b[1;5D
map alt+right send_text all \x1b[1;5C
# map alt+left send_text all \x1b\x62
# map alt+right send_text all \x1b\x66


map cmd+shift+t set_tab_title
map cmd+/ send_text all ++

map ctrl+shift+h         show_scrollback

mouse_hide_wait 3.0

copy_on_select yes

url_color #0087bd
url_style curly

# usefull for using M-(?) in tmux 
macos_option_as_alt yes
# macos_titlebar_color background


include current-theme.conf
background #2C323B
# cursor #7daea3
cursor None
# cursor #777777
# cursor #6F8FAF
# cursor #b57614
 # cursor #458588
foreground #a9b1d6

# Selection highlight
selection_foreground white
selection_background #4466aa

tab_bar_background   #2C323B
# active_tab_foreground   #4E96E2
# active_tab_foreground #a9b1d6
# active_tab_foreground #7daea3
active_tab_foreground #5485c0

# active_tab_foreground #4d83d0
# active_tab_foreground blue
#active_tab_foreground   #e86000
active_tab_background   #242a33
inactive_tab_foreground #777777
# inactive_tab_foreground #888888
active_tab_font_style   bold
inactive_tab_background #333941
# active_tab_background #262c35
# active_tab_background #424242
# background #282d37
#
# scrollback_pager bash -c "exec /usr/local/bin/nvim 63<&0 0</dev/null -u NONE -c 'map <silent> q :qa!<CR>' -c 'set shell=bash scrollback=100000 termguicolors laststatus=0 clipboard+=unnamedplus' -c 'autocmd TermEnter * stopinsert' -c 'autocmd TermClose * call cursor(max([0,INPUT_LINE_NUMBER-1])+CURSOR_LINE, CURSOR_COLUMN)' -c 'terminal sed </dev/fd/63 -e \"s/'$'\x1b'']8;;file:[^\]*[\]//g\" && sleep 0.01 && printf \"'$'\x1b'']2;\"'"

# launch action (optional `--stdin-add-formatting`)
map f1 launch --type overlay --stdin-source=@screen_scrollback ~/.config/kitty/pager.sh

map ctrl+g kitten hints

# map f1 launch --stdin-source=@screen_scrollback --stdin-add-formatting nvim -u NORC
# map f1 launch --stdin-source=@screen_scrollback --stdin-add-formatting less +G -R
# map f1 launch --stdin-source=@screen_scrollback --stdin-add-formatting
# scrollback_pager nvim
# scrollback_pager bash -c 'nvim -u NORC -c "map q :qa!<CR>" -c "terminal cat "<(cat)" - " -c "map i <Nop>" -c "set clipboard+=unnamedplus" -c "call cursor(CURSOR_LINE, CURSOR_COLUMN)" '

# https://github.com/tmux/tmux/wiki/Clipboard#terminal-support---tmux-inside-tmux
clipboard_control write-primary write-clipboard no-append
